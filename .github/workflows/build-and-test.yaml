name: build-and-test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

jobs:
  'deno':
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Generate parser and scanner
        run: |
          cd ./components/deno
          ./tasks/dev parser

      - name: Lint
        run: |
          cd ./components/deno
          deno lint

      - name: Formatting
        run: |
          cd ./components/deno
          deno fmt --check

      - name: Unit tests
        run: |
          cd ./components/deno
          deno test

      - name: Scenario tests
        run: |
          cd ./components/deno
          ./tasks/dev scenario

  'kotlin':
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Install deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Generate parser and scanner
        run: |
          cd ./components/kotlin
          ./tasks/dev parser

      - name: Unit tests
        run: |
          cd ./components/kotlin
          ./tasks/dev unit

      - name: Build JAR
        run: |
          cd ./components/kotlin
          ./tasks/dev jar

      - name: Interpreter Scenario Tests
        run: |
          cd ./components/kotlin
          ./tasks/dev interpreter_scenario

      - name: Compiler Scenario Tests
        run: |
          cd ./components/kotlin
          ./tasks/dev compiler_scenario

  'bci-deno':
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Lint
        run: |
          cd ./components/bci-deno
          deno lint

      - name: Formatting
        run: |
          cd ./components/bci-deno
          deno fmt --check

      - name: Scenario tests
        run: |
          cd ./components/bci-deno
          ./tasks/dev run

  'bci-c':
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Install deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Scenario tests
        run: |
          cd ./components/bci-c
          ./tasks/dev run

      # - name: Show hardware info
      #   run: |
      #     cd ./components/bci-c
      #     uname -a
      #     uname -m

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: bci-c-linux-x86_64
      #     path: ./components/bci-c/src/bci
      #     retention-days: 5

  'upload-jar-artefact':
    runs-on: ubuntu-latest
    needs: 
      - kotlin
      - deno
      - bci-deno
      - bci-c

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Install deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Generate parser and scanner
        run: |
          cd ./components/kotlin
          ./tasks/dev parser

      - name: Build JAR
        run: |
          cd ./components/kotlin
          ./tasks/dev jar

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Upload Artifact'
        run: |
          az storage blob upload \
            --account-name lltlca \
            --container-name bin \
            --name tlca.jar \
            --type block \
            --tier hot \
            --file ./components/kotlin/app/build/libs/app.jar  \
            --overwrite


  'upload-linux-x86_64-artefact':
    runs-on: ubuntu-latest
    needs: 
      - kotlin
      - deno
      - bci-deno
      - bci-c

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Install deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Build binary
        run: |
          cd ./components/bci-c
          ./tasks/dev bci

      - name: Show hardware info
        run: |
          cd ./components/bci-c
          uname -a
          uname -m

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload artifact
        run: |
          cd ./components/bci-c
          az storage blob upload \
            --account-name lltlca \
            --container-name bin \
            --name tlca-bci-c-linux-x86_64 \
            --type block \
            --tier hot \
            --file src/bci \
            --overwrite


  'upload-darwin-x86_64-artefact':
    runs-on: macos-latest
    needs: 
      - kotlin
      - deno
      - bci-deno
      - bci-c

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Install deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Build binary
        run: |
          cd ./components/bci-c
          ./tasks/dev bci

      - name: Show hardware info
        run: |
          cd ./components/bci-c
          uname -a
          uname -m

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload artifact
        run: |
          cd ./components/bci-c
          az storage blob upload \
            --account-name lltlca \
            --container-name bin \
            --name tlca-bci-c-darwin-x86_64 \
            --type block \
            --tier hot \
            --file src/bci --overwrite
